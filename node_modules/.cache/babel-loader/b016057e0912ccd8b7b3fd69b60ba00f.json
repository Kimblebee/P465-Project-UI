{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    \"default\": props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","map":{"version":3,"sources":["C:/Users/louie/OneDrive - Indiana University/Desktop/TicketFaster/P465-Project-UI/node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","FormGroup","useForkRef","useControlled","RadioGroupContext","useId","RadioGroup","forwardRef","props","ref","actions","children","nameProp","name","valueProp","value","onChange","other","rootRef","useRef","_useControlled","controlled","defaultValue","_useControlled2","setValue","useImperativeHandle","focus","input","current","querySelector","handleRef","handleChange","event","target","createElement","Provider","role","process","env","NODE_ENV","propTypes","node","oneOfType","arrayOf","string","number","func","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"]},"metadata":{},"sourceType":"module"}