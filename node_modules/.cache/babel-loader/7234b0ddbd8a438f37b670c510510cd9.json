{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\louie\\\\OneDrive - Indiana University\\\\Desktop\\\\TicketFaster\\\\P465-Project-UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\louie\\\\OneDrive - Indiana University\\\\Desktop\\\\TicketFaster\\\\P465-Project-UI\\\\src\\\\components\\\\CustomInput\\\\CustomInput.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2, _classNames4;\n\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })));\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/louie/OneDrive - Indiana University/Desktop/TicketFaster/P465-Project-UI/src/components/CustomInput/CustomInput.js"],"names":["React","PropTypes","classNames","makeStyles","FormControl","InputLabel","Input","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","white","inputRootCustomClasses","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}