{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = computeIndex;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _constant = _interopRequireDefault(require(\"./constant\"));\n\nfunction computeIndex(params) {\n  var children = params.children,\n      startIndex = params.startIndex,\n      startX = params.startX,\n      pageX = params.pageX,\n      viewLength = params.viewLength,\n      resistance = params.resistance;\n  var indexMax = _react[\"default\"].Children.count(children) - 1;\n  var index = startIndex + (startX - pageX) / viewLength;\n  var newStartX;\n\n  if (!resistance) {\n    // Reset the starting point\n    if (index < 0) {\n      index = 0;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    } else if (index > indexMax) {\n      index = indexMax;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    }\n  } else if (index < 0) {\n    index = Math.exp(index * _constant[\"default\"].RESISTANCE_COEF) - 1;\n  } else if (index > indexMax) {\n    index = indexMax + 1 - Math.exp((indexMax - index) * _constant[\"default\"].RESISTANCE_COEF);\n  }\n\n  return {\n    index: index,\n    startX: newStartX\n  };\n}","map":{"version":3,"sources":["C:/Users/louie/OneDrive - Indiana University/Desktop/TicketFaster/P465-Project-UI/node_modules/react-swipeable-views-core/lib/computeIndex.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","computeIndex","_react","_constant","params","children","startIndex","startX","pageX","viewLength","resistance","indexMax","Children","count","index","newStartX","Math","exp","RESISTANCE_COEF"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,WAAP,GAAkBE,YAAlB;;AAEA,IAAIC,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIO,SAAS,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,SAASK,YAAT,CAAsBG,MAAtB,EAA8B;AAC5B,MAAIC,QAAQ,GAAGD,MAAM,CAACC,QAAtB;AAAA,MACIC,UAAU,GAAGF,MAAM,CAACE,UADxB;AAAA,MAEIC,MAAM,GAAGH,MAAM,CAACG,MAFpB;AAAA,MAGIC,KAAK,GAAGJ,MAAM,CAACI,KAHnB;AAAA,MAIIC,UAAU,GAAGL,MAAM,CAACK,UAJxB;AAAA,MAKIC,UAAU,GAAGN,MAAM,CAACM,UALxB;AAMA,MAAIC,QAAQ,GAAGT,MAAM,WAAN,CAAeU,QAAf,CAAwBC,KAAxB,CAA8BR,QAA9B,IAA0C,CAAzD;AACA,MAAIS,KAAK,GAAGR,UAAU,GAAG,CAACC,MAAM,GAAGC,KAAV,IAAmBC,UAA5C;AACA,MAAIM,SAAJ;;AAEA,MAAI,CAACL,UAAL,EAAiB;AACf;AACA,QAAII,KAAK,GAAG,CAAZ,EAAe;AACbA,MAAAA,KAAK,GAAG,CAAR;AACAC,MAAAA,SAAS,GAAG,CAACD,KAAK,GAAGR,UAAT,IAAuBG,UAAvB,GAAoCD,KAAhD;AACD,KAHD,MAGO,IAAIM,KAAK,GAAGH,QAAZ,EAAsB;AAC3BG,MAAAA,KAAK,GAAGH,QAAR;AACAI,MAAAA,SAAS,GAAG,CAACD,KAAK,GAAGR,UAAT,IAAuBG,UAAvB,GAAoCD,KAAhD;AACD;AACF,GATD,MASO,IAAIM,KAAK,GAAG,CAAZ,EAAe;AACpBA,IAAAA,KAAK,GAAGE,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGX,SAAS,WAAT,CAAkBe,eAAnC,IAAsD,CAA9D;AACD,GAFM,MAEA,IAAIJ,KAAK,GAAGH,QAAZ,EAAsB;AAC3BG,IAAAA,KAAK,GAAGH,QAAQ,GAAG,CAAX,GAAeK,IAAI,CAACC,GAAL,CAAS,CAACN,QAAQ,GAAGG,KAAZ,IAAqBX,SAAS,WAAT,CAAkBe,eAAhD,CAAvB;AACD;;AAED,SAAO;AACLJ,IAAAA,KAAK,EAAEA,KADF;AAELP,IAAAA,MAAM,EAAEQ;AAFH,GAAP;AAID","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = computeIndex;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _constant = _interopRequireDefault(require(\"./constant\"));\n\nfunction computeIndex(params) {\n  var children = params.children,\n      startIndex = params.startIndex,\n      startX = params.startX,\n      pageX = params.pageX,\n      viewLength = params.viewLength,\n      resistance = params.resistance;\n  var indexMax = _react.default.Children.count(children) - 1;\n  var index = startIndex + (startX - pageX) / viewLength;\n  var newStartX;\n\n  if (!resistance) {\n    // Reset the starting point\n    if (index < 0) {\n      index = 0;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    } else if (index > indexMax) {\n      index = indexMax;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    }\n  } else if (index < 0) {\n    index = Math.exp(index * _constant.default.RESISTANCE_COEF) - 1;\n  } else if (index > indexMax) {\n    index = indexMax + 1 - Math.exp((indexMax - index) * _constant.default.RESISTANCE_COEF);\n  }\n\n  return {\n    index: index,\n    startX: newStartX\n  };\n}"]},"metadata":{},"sourceType":"script"}